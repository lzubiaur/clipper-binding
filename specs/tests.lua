local clipper = require 'clipper'
local lust = require 'lust'
local describe, it, expect, before = lust.describe, lust.it, lust.expect, lust.before

local scale = 1000000

describe('test clipper ffi binding', function()
  lust.before(function()
  end)

  describe('path usage', function()
    it('can create new path',function()
      local path = clipper.Path()
      expect(path).to.exist()
    end)
    it('can add and get point',function()
      local path = clipper.Path()
      path:add(10,20)
      expect(path:get(1).x).to.be(10)
      expect(path:get(1).y).to.be(20)
      path:add(20,20)
      path:add(40,40)
      path:add(50,120)
      expect(path:size()).to.be(4)
    end)
  end)

  describe('paths usage', function()
    it('can create new paths', function()
      local paths = clipper.Paths()
      expect(paths).to.exist()
    end)
    it('can add and get path', function()
      local p1 = clipper.Path()
      p1:add(10,10)
      p1:add(20,20)
      p1:add(30,50)
      local p2 = clipper.Path()
      p2:add(50,50)
      p2:add(100,60)
      local paths = clipper.Paths()
      paths:add(p1)
      paths:add(p2)
      expect(paths:size()).to.be(2)
      expect(paths:get(1):get(1).x).to.be(10)
      expect(paths:get(1):get(1).y).to.be(10)
      expect(paths:get(1):get(2).x).to.be(20)
      expect(paths:get(1):get(2).y).to.be(20)
      expect(paths:get(1):get(3).x).to.be(30)
      expect(paths:get(1):get(3).y).to.be(50)
      expect(paths:get(2):get(1).x).to.be(50)
      expect(paths:get(2):get(1).y).to.be(50)
      expect(paths:get(2):get(2).x).to.be(100)
      expect(paths:get(2):get(2).y).to.be(60)
    end)
  end)

  describe('paths offset',function()
    local co
    before(function()
      co = clipper.ClipperOffset()
    end)
    it('can offset a single path',function()
      local p1 = clipper.Path()
      p1:add(10,20)
      p1:add(50,20)
      p1:add(50,50)
      local out = co:offsetPath(p1,10,'miter','openButt')
      expect(out:size()).to.be(1)
      expect(out:get(1):size()).to.be(6)
    end)
    it('can clear all paths', function()
      co:clear()
      local p2 = clipper.Path()
      p2:add(100,100)
      p2:add(20,150)
      out = co:offsetPath(p2,10,'miter','openButt')
      expect(out:get(1):size()).to.be(4)
    end)
    it('can offset multiple paths',function()
      -- TODO
    end)
  end)
end)
